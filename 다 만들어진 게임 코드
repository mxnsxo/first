import tkinter as tk
import random
import time

class DifferentLetterGame:
    def __init__(self):
        self.window = tk.Tk()
        self.window.title("다른 글자 찾기 게임")
        
        # 게임 설정
        self.grid_size = 4
        self.buttons = []
        self.start_time = None
        self.game_active = False
        
        # 한글 세트 예시 (비슷한 글자들)
        self.letter_sets = [
            ('가', '각'),
            ('은', '는'),
            ('왕', '왱'),
            ('말', '맑'),
            ('봄', '봅'),
            ('산', '삼'),
        ]
        
        # UI 구성
        self.create_widgets()
        
    def create_widgets(self):
        # 상단 레이블
        self.info_label = tk.Label(self.window, text="다른 글자를 찾아보세요!", font=('Arial', 14))
        self.info_label.pack(pady=10)
        
        # 시간 표시 레이블
        self.time_label = tk.Label(self.window, text="시간: 0.0초", font=('Arial', 12))
        self.time_label.pack(pady=5)
        
        # 게임 그리드
        self.game_frame = tk.Frame(self.window)
        self.game_frame.pack(padx=20, pady=20)
        
        # 시작 버튼
        self.start_button = tk.Button(self.window, text="게임 시작", command=self.start_game)
        self.start_button.pack(pady=10)
        
    def create_grid(self):
        # 기존 버튼 제거
        for button in self.buttons:
            button.destroy()
        self.buttons = []
        
        # 랜덤하게 글자 세트 선택
        main_char, different_char = random.choice(self.letter_sets)
        
        # 랜덤하게 다른 글자 위치 선택
        different_pos = (random.randint(0, self.grid_size-1), 
                        random.randint(0, self.grid_size-1))
        
        # 그리드 생성
        for i in range(self.grid_size):
            row = []
            for j in range(self.grid_size):
                if (i, j) == different_pos:
                    char = different_char
                else:
                    char = main_char
                    
                button = tk.Button(self.game_frame, text=char, 
                                 width=3, height=1, 
                                 font=('Arial', 20),
                                 command=lambda x=i, y=j: self.check_answer(x, y, different_pos))
                button.grid(row=i, column=j, padx=2, pady=2)
                row.append(button)
            self.buttons.append(row)
            
    def start_game(self):
        self.game_active = True
        self.start_time = time.time()
        self.create_grid()
        self.start_button.config(state='disabled')
        self.update_time()
        
    def check_answer(self, x, y, correct_pos):
        if not self.game_active:
            return
            
        if (x, y) == correct_pos:
            end_time = time.time() - self.start_time
            self.info_label.config(text=f"정답입니다! 걸린 시간: {end_time:.1f}초")
            self.game_active = False
            self.start_button.config(state='normal', text="다시 시작")
        else:
            self.info_label.config(text="틀렸습니다! 다시 시도해보세요.")
            
    def update_time(self):
        if self.game_active and self.start_time:
            current_time = time.time() - self.start_time
            self.time_label.config(text=f"시간: {current_time:.1f}초")
            self.window.after(100, self.update_time)
            
    def run(self):
        self.window.mainloop()

# 게임 실행
if __name__ == "__main__":
    game = DifferentLetterGame()
    game.run()
